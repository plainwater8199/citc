<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.citc.nce.auth.csp.smsTemplate.dao.SmsTemplateMapper">
    <select id="searchTemplate" resultType="com.citc.nce.auth.csp.smsTemplate.vo.SmsTemplateSimpleVo">
        select distinct tmp.id as id,
        tmp.template_name as template_name,
        if(acc.deleted,null,acc.account_name) as account_name,
        tmp.template_type as templateType,
        acc.deleted as deleted,
        tmp.create_time as create_time,
        audit.status as audit,
        tmp.content as content,
        acc.status as accountStatus,
        tmp.signature_id as signatureId,
        tmp.platform_template_id as platformTemplateId,
        csas.signature as signature
        from csp_sms_template tmp
        left join csp_sms_account acc on tmp.account_id = acc.account_id
        left join csp_sms_template_audit audit on tmp.id = audit.sms_template_id
        left join csp_sms_account_signature csas on tmp.signature_id = csas.id
        where tmp.deleted_time is null
        and tmp.customer_id = #{userId}
        <if test="templateName != null and templateName != ''">
            and tmp.template_name like concat('%',#{templateName},'%')
        </if>
        <!--        <if test="templateName != null and templateName != ''">-->
        <!--            and tmp.id = #{templateName}-->
        <!--        </if>-->
        <if test="templateType != null and templateType != ''">
            and tmp.template_type = #{templateType}
        </if>
        <if test="accountId != null and accountId != ''">
            and tmp.account_id = #{accountId}
        </if>
        <if test="status != null">
            and audit.status = #{status}
        </if>
    </select>

    <select id="searchTemplateOther" resultType="com.citc.nce.auth.csp.smsTemplate.vo.SmsTemplateSimpleVo">
        select distinct tmp.id as id,
        tmp.template_name as template_name,
        if(acc.deleted,null,acc.account_name) as account_name,
        tmp.template_type as templateType,
        acc.deleted as deleted,
        tmp.create_time as create_time,
        audit.status as audit,
        tmp.content as content,
        acc.status as accountStatus,
        tmp.signature_id as signatureId,
        tmp.platform_template_id as platformTemplateId,
        csas.signature as signature
        from csp_sms_template tmp
        left join csp_sms_account acc on tmp.account_id = acc.account_id
        left join csp_sms_template_audit audit on tmp.id = audit.sms_template_id
        left join csp_sms_account_signature csas on tmp.signature_id = csas.id
        where tmp.deleted_time is null
        and tmp.customer_id = #{userId} and acc.deleted = 1
        <if test="templateName != null and templateName != ''">
            and tmp.template_name like concat('%',#{templateName},'%')
        </if>
        <!--        <if test="templateName != null and templateName != ''">-->
        <!--            and tmp.id = #{templateName}-->
        <!--        </if>-->
        <if test="templateType != null and templateType != ''">
            and tmp.template_type = #{templateType}
        </if>
        <if test="status != null">
            and audit.status = #{status}
        </if>
    </select>

    <select id="getHaveTemplateAccountsByUserId"
            resultType="com.citc.nce.auth.csp.smsTemplate.vo.SmsHaveTemplateAccountVo">
        select acc.id,
               acc.account_id,
               acc.account_name,
               acc.status
        from csp_sms_account acc
                 right join (select account_id
                             from csp_sms_template
                             where customer_id = #{customerId}
                             group by account_id) ids on acc.account_id = ids.account_id
        order by acc.create_time desc;
    </select>

    <select id="querySmsTemplate"
            resultType="com.citc.nce.auth.csp.smsTemplate.entity.SmsTemplateDo">
        select
         id, customer_id, template_name, account_id, signature_id, signature,
         platform_template_id, creator, creator_old, create_time, updater,
         updater_old, update_time, deleted_time, template_type, content
        from csp_sms_template
        where id = #{id};
    </select>
    <select id="exists" resultType="java.lang.Boolean">
        select count(*) from csp_sms_template where id = #{templateId} and customer_id = #{userId}
    </select>
</mapper>
